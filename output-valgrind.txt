==24537== Memcheck, a memory error detector
==24537== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24537== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==24537== Command: ./main
==24537== 
==24537== 
==24537== HEAP SUMMARY:
==24537==     in use at exit: 79,636 bytes in 17 blocks
==24537==   total heap usage: 58 allocs, 41 frees, 891,835 bytes allocated
==24537== 
==24537== 576 bytes in 2 blocks are possibly lost in loss record 6 of 10
==24537==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==24537==    by 0x40138B4: allocate_dtv (dl-tls.c:322)
==24537==    by 0x40138B4: _dl_allocate_tls (dl-tls.c:539)
==24537==    by 0x5C8126E: allocate_stack (allocatestack.c:588)
==24537==    by 0x5C8126E: pthread_create@@GLIBC_2.2.5 (pthread_create.c:539)
==24537==    by 0x4E639C4: rml::internal::thread_monitor::launch(void* (*)(void*), void*, unsigned long) (thread_monitor.h:218)
==24537==    by 0x4E63F24: tbb::internal::rml::private_worker::wake_or_launch() (private_server.cpp:297)
==24537==    by 0x4E636D1: tbb::internal::rml::private_server::wake_some(int) (private_server.cpp:395)
==24537==    by 0x4E63761: tbb::internal::rml::private_server::adjust_job_count_estimate(int) (private_server.cpp:406)
==24537==    by 0x4E6CF67: tbb::internal::market::adjust_demand(tbb::internal::arena&, int) (market.cpp:655)
==24537==    by 0x4E7B7CF: void tbb::internal::arena::advertise_new_work<(tbb::internal::arena::new_work_type)0>() (arena.h:539)
==24537==    by 0x4E775B7: tbb::internal::generic_scheduler::local_spawn(tbb::task*, tbb::task*&) (scheduler.cpp:712)
==24537==    by 0x4E7789A: tbb::internal::generic_scheduler::spawn(tbb::task&, tbb::task*&) (scheduler.cpp:738)
==24537==    by 0x40192D: tbb::interface5::internal::task_base::spawn(tbb::task&) (task.h:1114)
==24537== 
==24537== 1,440 bytes in 5 blocks are possibly lost in loss record 8 of 10
==24537==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==24537==    by 0x40138B4: allocate_dtv (dl-tls.c:322)
==24537==    by 0x40138B4: _dl_allocate_tls (dl-tls.c:539)
==24537==    by 0x5C8126E: allocate_stack (allocatestack.c:588)
==24537==    by 0x5C8126E: pthread_create@@GLIBC_2.2.5 (pthread_create.c:539)
==24537==    by 0x4E639C4: rml::internal::thread_monitor::launch(void* (*)(void*), void*, unsigned long) (thread_monitor.h:218)
==24537==    by 0x4E63F24: tbb::internal::rml::private_worker::wake_or_launch() (private_server.cpp:297)
==24537==    by 0x4E636D1: tbb::internal::rml::private_server::wake_some(int) (private_server.cpp:395)
==24537==    by 0x4E63D1E: tbb::internal::rml::private_server::propagate_chain_reaction() (private_server.cpp:157)
==24537==    by 0x4E63048: tbb::internal::rml::private_worker::run() (private_server.cpp:257)
==24537==    by 0x4E62F1D: tbb::internal::rml::private_worker::thread_routine(void*) (private_server.cpp:219)
==24537==    by 0x5C806B9: start_thread (pthread_create.c:333)
==24537==    by 0x57B241C: clone (clone.S:109)
==24537== 
==24537== LEAK SUMMARY:
==24537==    definitely lost: 0 bytes in 0 blocks
==24537==    indirectly lost: 0 bytes in 0 blocks
==24537==      possibly lost: 2,016 bytes in 7 blocks
==24537==    still reachable: 77,620 bytes in 10 blocks
==24537==                       of which reachable via heuristic:
==24537==                         newarray           : 3,096 bytes in 3 blocks
==24537==         suppressed: 0 bytes in 0 blocks
==24537== Reachable blocks (those to which a pointer was found) are not shown.
==24537== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24537== 
==24537== For counts of detected and suppressed errors, rerun with: -v
==24537== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)